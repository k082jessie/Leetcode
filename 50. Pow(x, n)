class Solution:
    def myPow(self, x: float, n: int) -> float:
        # TLE
        ans = 1
        if n == 0:
            return 1
        elif n == 1:
            return x
        elif n > 1:
            for _ in range(1, n+1):
                ans *= x
        elif n < 0:
            for _ in range(1, -n+1):
                ans *= 1/x
        return ans
        
        # Recursive
        if not n:
            return 1
        if n < 0:
            return 1 / self.myPow(x, -n)
        if n % 2:
            return x * self.myPow(x, n-1)
        return self.myPow(x*x, n/2)
        
        # Iterative
        if n < 0:
            x = 1 / x
            n = -n
        pow = 1
        while n:
            if n & 1:
                pow *= x
            x *= x
            n >>= 1
        return pow
