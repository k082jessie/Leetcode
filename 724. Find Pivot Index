 class Solution:
    def pivotIndex(self, nums: List[int]) -> int:       
        #TLE, use pivot to seperate left and right
        sumL = sumR = 0
        for i in range(len(nums)):
            sumL = sum(nums[:i])
            sumR = sum(nums[i+1:])
            if sumL == sumR:
                return i
        return -1
        
        # mine II
        sumL = 0
        sumR = sum(nums)
        for i in range(len(nums)):
            if i > 0:
                sumL += nums[i-1]                
            sumR -= nums[i]

            if sumL == sumR:
                return i
        return -1
        
        # Other Solution
        # Initialization:
        # Left hand side be empty, and
        # Right hand side holds all weights.
        total_weight_on_left, total_weight_on_right = 0, sum(nums)

        for idx, current_weight in enumerate(nums):

            total_weight_on_right -= current_weight

            if total_weight_on_left == total_weight_on_right:
                # balance is met on both sides
                # i.e., sum( nums[ :idx] ) == sum( nums[idx+1: ] )
                return idx

            total_weight_on_left += current_weight

        return -1
