class Solution:
    def lastStoneWeight(self, stones: List[int]) -> int:
        if len(stones) == 1:
            return stones.pop()
        
        while len(stones) > 1:
            stones = sorted(stones, reverse=True)
            if stones[0] > stones[1]:
                new = stones[0] - stones[1]
                stones.pop(0)
                stones.pop(0)
                stones.append(new)
            elif stones[0] == stones[1]:
                stones.pop(0)
                stones.pop(0)
                
        if not stones:
            return 0
        else:
            return stones.pop()
            
            
            
        # Other Solution
        stones.sort()
        while stones:
            s1 = stones.pop()  # the heaviest stone
            if not stones:  # s1 is the remaining stone
                return s1
            s2 = stones.pop()  # the second-heaviest stone; s2 <= s1
            if s1 > s2:
                # the remaining stone will be s1-s2
                # binary-insert the remaining stone into stones
                insort_left(stones, s1-s2)
            # else s1 == s2; both stones are destroyed(unnecessary, s2 has already pop from list)
        return 0  # if no more stones remain
