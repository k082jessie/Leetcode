    def rangeSumBST(self, root: Optional[TreeNode], low: int, high: int) -> int:
        def helper(node):
            if node:
                if node.val >= low and node.val <= high:
                    res.append(node.val)
                if node.left:
                    helper(node.left)
                if node.right:
                    helper(node.right)
            return res
        res = []
        return sum(helper(root))
        
        # Other Solution
        if not root:
            return 0
        elif root.val < low:
            return self.rangeSumBST(root.right, low, high) if root.right else 0
        elif root.val > high:
            return self.rangeSumBST(root.left, low, high) if root.left else 0

        return root.val + self.rangeSumBST(root.right, low, high) + self.rangeSumBST(root.left, low, high)
